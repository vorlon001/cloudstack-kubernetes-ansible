KUBEADM_CERTSANs: &KUBEADM_CERTSANs
  - k8s.cloud.local
  - 192.168.200.190
  - k8s.iblog.pro

KUBEADM_Patch_init: "no"

# https://kubernetes.io/docs/reference/config-api/kube-controller-manager-config.v1alpha1/
# https://kubernetes.io/docs/reference/config-api/apiserver-config.v1beta1/
KUBEADM_ClusterConfiguration:
    apiServer:
      certSANs: *KUBEADM_CERTSANs
      extraArgs:
      - name: audit-log-format
        value: json
      - name: audit-log-maxage
        value: "7"
      - name: audit-log-maxbackup
        value: "10"
      - name: audit-log-maxsize
        value: "100"
      - name: audit-log-path
        value: /var/log/kube-audit/audit.log
      - name: audit-policy-file
        value: /etc/kubernetes/policies/audit-policy.yaml
      - name: authorization-webhook-cache-authorized-ttl
        value: 5m0s
      - name: authorization-webhook-cache-unauthorized-ttl
        value: 30s
      - name: profiling
        value: "false"
      - name: request-timeout
        value: 300s
      - name: service-account-key-file
        value: /etc/kubernetes/pki/sa.pub
      - name: service-account-signing-key-file
        value: /etc/kubernetes/pki/sa.key
      - name: tls-cipher-suites
        value: TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      - name: tls-min-version
        value: VersionTLS13
      extraVolumes:
      - hostPath: /etc/kubernetes/policies
        mountPath: /etc/kubernetes/policies
        name: policies
        pathType: DirectoryOrCreate
        readOnly: true
      - hostPath: /var/log/kube-audit
        mountPath: /var/log/kube-audit
        name: logs
        pathType: DirectoryOrCreate
    # 87600h0m0s:10years, 438000h0m0s:50years
    caCertificateValidityPeriod: 438000h0m0s
    # 8760h0m0s:1years, 87600h0m0s:10years
    certificateValidityPeriod: 87600h0m0s
    certificatesDir: /etc/kubernetes/pki
    controllerManager:
      extraArgs:
      - name: bind-address
        value: 0.0.0.0
      - name: node-cidr-mask-size-ipv4
        value: "24"
      - name: node-monitor-grace-period
        value: 5s
      - name: node-monitor-period
        value: 40s
      - name: profiling
        value: "false"
    # RSA-2048|RSA-3072|RSA-4096|ECDSA-P256
    encryptionAlgorithm: ECDSA-P256
    dns: {}
#      imageRepository: harbor.iblog.pro/registry.k8s.io/coredns
#      imageTag: v1.11.3
#      disabled: false
    proxy: {}
#      disabled: false
    etcd:
      local:
        dataDir: /var/lib/etcd
        extraArgs:
        - name: listen-metrics-urls
          value: http://0.0.0.0:2381
        - name: metrics
          value: extensive
        - name: quota-backend-bytes
          #$((1024*1024*1024)) 1073741824
          value: "1073741824"
    scheduler:
      extraArgs:
      - name: bind-address
        value: 0.0.0.0
      - name: profiling
        value: "false"


KubeletConfiguration:
    # https://kubernetes.io/docs/reference/command-line-tools-reference/kubelet/
    registerNode: true
    cgroupDriver: "systemd"
    cgroupsPerQOS: true
    clusterDomain: "cluster.local"
    cpuManagerReconcilePeriod: "0s"
    fileCheckFrequency: "0s"
    healthzBindAddress: "127.0.0.1"
    httpCheckFrequency: "0s"
    imageMinimumGCAge: "0s"
    memorySwap: {}
    # "promiscuous-bridge": make the container bridge promiscuous.
    # "hairpin-veth": set the hairpin flag on container veth interfaces.
    # "none": do nothing.
    hairpinMode: "hairpin-veth"
    nodeStatusMaxImages: 50
    nodeStatusReportFrequency: "20s"
    nodeStatusUpdateFrequency: "30s"
    resolvConf: "/run/systemd/resolve/resolv.conf"
    runtimeRequestTimeout: "0s"
    evictionPressureTransitionPeriod: "5m"
    evictionMaxPodGracePeriod: 300
    memoryThrottlingFactor: 0.9
    podsPerCore: 5
    maxPods: 20
    containerLogMaxSize: "50Mi"
    containerLogMaxFiles: 5
    maxParallelImagePulls: 5
    podPidsLimit: 4096
    maxOpenFiles: 1000000
    shutdownGracePeriod: "15s"
    shutdownGracePeriodCriticalPods: "5s"
    streamingConnectionIdleTimeout: "0s"
    syncFrequency: "0s"
    volumeStatsAggPeriod: "0s"
    kubeAPIQPS: 50
    kubeAPIBurst: 100
    rotateCertificates: true
    serverTLSBootstrap: false
    serializeImagePulls: false
    tlsMinVersion: "VersionTLS13"
    imageGCHighThresholdPercent: 55
    imageGCLowThresholdPercent: 50
    kubeletCgroups: /kubelet.slice
    authentication:
        anonymous:
            enabled: false
        webhook:
            cacheTTL: "0s"
            enabled: true
    authorization:
        mode: "Webhook"
        webhook:
          cacheAuthorizedTTL:   "0s"
          cacheUnauthorizedTTL: "0s"
    logging:
      flushFrequency: 0
      options:
        json:
            infoBufferSize:  0
      verbosity:  0
    #
    # not work on kubead init
    #
    # 2024-09-21T16:51:59.910962+00:00 node130 kubelet[6589]: E0921 16:51:59.910933    6589 run.go:72] "command failed" err="failed to run Kubelet: failed to create kubelet: failed to initialize file based certificate manager: unable to set up dynamic certificate manager for kubelet server cert files: open /var/lib/kubelet/pki/kubelet.crt: no such file or directory"
    # tlsCertFile: /var/lib/kubelet/pki/kubelet.crt
    # tlsPrivateKeyFile: /var/lib/kubelet/pki/kubelet.key
    tlsCipherSuites:
    - "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
    - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
    - "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305"
    - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
    - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305"
    - "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
    - "TLS_RSA_WITH_AES_256_GCM_SHA384"
    - "TLS_RSA_WITH_AES_128_GCM_SHA256"
    allowedUnsafeSysctls:
      - "net.core.somaxconn"
    systemReserved:
      cpu: 500m
      memory: 1000Mi
      ephemeral-storage: "1Gi"
    kubeReserved:
      cpu: 500m
      memory: 500Mi
      ephemeral-storage: 3Gi
    evictionHard:
      "memory.available":   "500Mi"
      "nodefs.available":   "20%"
      "nodefs.inodesFree":  "10%"
      "imagefs.available":  "25%"
      "imagefs.inodesFree": "15%"
    evictionMinimumReclaim:
      memory.available: "0Mi"
      nodefs.available: "500Mi"
      imagefs.available: "2Gi"
    evictionSoft:
      "memory.available":   "500Mi"
      "nodefs.available":   "25%"
      "nodefs.inodesFree":  "15%"
      "imagefs.available":  "30%"
      "imagefs.inodesFree": "25%"
    evictionSoftGracePeriod:
      "memory.available":   "2m30s"
      "nodefs.available":   "2m30s"
      "nodefs.inodesFree":  "2m30s"
      "imagefs.available":  "2m30s"
      "imagefs.inodesFree": "2m30s"

KubeProxyConfiguration:
    # https://kubernetes.io/docs/reference/config-api/kube-proxy-config.v1alpha1
    # https://kubernetes.io/docs/reference/command-line-tools-reference/kube-proxy/
    mode: ipvs
    metricsBindAddress: 0.0.0.0:10249
    healthzBindAddress: 0.0.0.0:10256
    enableProfiling: false


kubernetes_pki:
  - /etc/kubernetes/pki/sa.pub
  - /etc/kubernetes/pki/sa.key
  - /etc/kubernetes/pki/etcd/ca.key
  - /etc/kubernetes/pki/etcd/ca.crt
  - /etc/kubernetes/pki/front-proxy-ca.crt
  - /etc/kubernetes/pki/apiserver-etcd-client.crt
  - /etc/kubernetes/pki/apiserver-etcd-client.key
  - /etc/kubernetes/pki/ca.key
  - /etc/kubernetes/pki/ca.crt
  - /etc/kubernetes/pki/front-proxy-ca.key


