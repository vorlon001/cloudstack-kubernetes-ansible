---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mysql80
  namespace: test-kube-0
spec:
  selector:
    matchLabels:
      app: mysql80
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql80
    spec:
      containers:
      - image: docker.io/mysql:8.0.24
        name: mysql80
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: password
        ports:
        - containerPort: 3306
          name: mysql80
        volumeMounts:
        - name: mysql80-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql80-persistent-storage
        persistentVolumeClaim:
          claimName: mysql80-pv-volume2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql80-pv-volume2
  namespace: test-kube-0
spec:
  storageClassName: managed-nfs-storage
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql80oadbalancer
  namespace: test-kube-0
spec:
  selector:
    app: mysql80
  ports:
  - protocol: "TCP"
    port: 3306
    targetPort: 3306
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: mysql80nodeport
  namespace: test-kube-0
spec:
  selector:
    app: mysql80
  ports:
  - protocol: "TCP"
    port: 3306
    targetPort: 3306
  type: NodePort
