
HELMVERSION: "3.14.3"
platform: "amd64"
#KUBERNETES_VIP: "192.168.200.186"
KUBERNETES_clusterDomain: cluster.local
HELMFILE: "helm-v{{HELMVERSION}}-linux-{{platform}}.tar.gz"
HELM_CHARTMUSEUM_NAME: "cloudstack"
HELM_CHARTMUSEUM: "http://192.168.200.6:8080/"

TEST_HARBOR: harbor.iblog.pro/test/alpine:main.scratch.3.19.stage.4

KUBEADM_CONFIG_VERSION: "v92"

INIT_NODE_KUBERNETES: true
INIT_KUBERNETES: true
JOIN_WORKER_NODES_KUBERNETES: true
INIT_JOIN_MASTER_NODES_KUBERNETES: true
JOIN_MASTER_NODES_KUBERNETES: true

#INIT_NODE_KUBERNETES: false
#INIT_KUBERNETES: false
#JOIN_WORKER_NODES_KUBERNETES: false
#INIT_JOIN_MASTER_NODES_KUBERNETES: false
#JOIN_MASTER_NODES_KUBERNETES: false



#DEPLOY_HELM: true
#DEPLOY_CSI_NFS: false
#DEPLOY_NFS_HELM: false

#DEPLOY_CSI_NFS: false
#DEPLOY_PriorityClass: false
#DEPLOY_METRICSERVER: false
#DEPLOY_CERMANAGER: false

#DEPLOY_CNI_CILIUM: false
#DEPLOY_CNI_ANTREA: false
#DEPLOY_CNI_KUBEOVN: false

#DEPLOY_METALLB: false
#DEPLOY_Nginx_Ingress: false

DEPLOY_HELM: true

DEPLOY_CSI_NFS: false
DEPLOY_NFS_HELM: true

DEPLOY_PriorityClass: true

DEPLOY_METRICSERVER: true
DEPLOY_CERMANAGER: true

DEPLOY_CNI_CILIUM: false
DEPLOY_CNI_ANTREA: false
DEPLOY_CNI_KUBEOVN: false
DEPLOY_CNI_CALICO: true

DEPLOY_METALLB: true
DEPLOY_Nginx_Ingress: true


CSI:
    NFS:
        NAMESPACE: nfs-client
        image: harbor.iblog.pro/gcrio/k8s-staging-sig-storage/nfs-subdir-external-provisioner:v4.0.2
        PROVISIONER_NAME: iblog.pro/nfs
        SERVER: 192.168.200.1
        SERVER_path: /cloud/nfsshare
        replicas: 2

    NFS_HELM:
        chart_ref: "cloudstack/csi-driver-nfs"
        release_namespace: csi-driver-nfs
        create_namespace: yes
        chart_version: "v4.6.0"
        helm_values:
          image:
              baseRepo: harbor.iblog.pro/registryk8sio
              nfs:
                  repository: harbor.iblog.pro/registryk8sio/sig-storage/nfsplugin
                  tag: v4.6.0
                  pullPolicy: IfNotPresent
              csiProvisioner:
                  repository: harbor.iblog.pro/registryk8sio/sig-storage/csi-provisioner
                  tag: v4.0.0
                  pullPolicy: IfNotPresent
              csiSnapshotter:
                  repository: harbor.iblog.pro/registryk8sio/sig-storage/csi-snapshotter
                  tag: v6.3.3
                  pullPolicy: IfNotPresent
              livenessProbe:
                  repository: harbor.iblog.pro/registryk8sio/sig-storage/livenessprobe
                  tag: v2.12.0
                  pullPolicy: IfNotPresent
              nodeDriverRegistrar:
                  repository: harbor.iblog.pro/registryk8sio/sig-storage/csi-node-driver-registrar
                  tag: v2.10.0
                  pullPolicy: IfNotPresent
              externalSnapshotter:
                  repository: harbor.iblog.pro/registryk8sio/sig-storage/snapshot-controller
                  tag: v6.3.3
                  pullPolicy: IfNotPresent


CERMANAGER:
    cainjector_image: "harbor.iblog.pro/quayio/jetstack/cert-manager-cainjector:v1.14.3"
    controller_image: "harbor.iblog.pro/quayio/jetstack/cert-manager-controller:v1.14.3"
    webhook_image: "harbor.iblog.pro/quayio/jetstack/cert-manager-webhook:v1.14.3"
    acme_image: quay.io/jetstack/cert-manager-acmesolver:v1.14.3

METRICSERVER:
    image: harbor.iblog.pro/registryk8sio/metrics-server/metrics-server:v0.6.4

INGRESS:
    NGINX:
        chart_ref: "cloudstack/ingress-nginx"
        release_state: present
        update_repo_cache: true
        create_namespace: yes
        chart_version: "4.10.0"
        controller_registry: registry.k8s.io
        controller_image: ingress-nginx/controller
        controller_tag: "v1.10.0"
        controller_digest: sha256:42b3f0e5d0846876b1791cd3afeb5f1cbbe4259d6f35651dcc1b5c980925379c
        controller_digestChroot: sha256:7eb46ff733429e0e46892903c7394aff149ac6d284d92b3946f3baf7ff26a096
        INGRESS_IPPOOL: default
        INGRESS_pools:
          ingress-nginx-1:
          - 11.0.2.95
          ingress-nginx-2:
          - 11.0.2.100
          system-ingress:
          - 11.0.2.90

CNI:
    ANTREA:
        chart_ref: "cloudstack/antrea"
        release_state: present
        update_repo_cache: true
        release_namespace: kube-system
        create_namespace: no
        chart_version: 1.15.1
        helm_values:
          agentImage:
            repository: "harbor.iblog.pro/dockerio/antrea/antrea-agent-ubuntu"
            pullPolicy: "IfNotPresent"
            tag: "v1.15.1"
          controllerImage:
            repository: "harbor.iblog.pro/dockerio/antrea/antrea-controller-ubuntu"
            pullPolicy: "IfNotPresent"
            tag: "v1.15.1"
    KUBEOVN:
        MASTERS: "192.168.200.180,192.168.200.181,192.168.200.182"
        chart_ref: "cloudstack/kube-ovn"
        release_state: present
        update_repo_cache: true
        release_namespace: default
        # kube-system
        create_namespace: no
        chart_version: v1.12.11
        helm_values:
          global:
            registry:
              address: harbor.iblog.pro/dockerio/kubeovn
            images:
              kubeovn:
                repository: kube-ovn
                dpdkRepository: kube-ovn-dpdk
                vpcRepository: vpc-nat-gateway
                tag: v1.12.11
                support_arm: true
                thirdparty: true
          func:
            ENABLE_LB: true
            ENABLE_NP: true
            ENABLE_EXTERNAL_VPC: true
            HW_OFFLOAD: false
            ENABLE_LB_SVC: false
            ENABLE_KEEP_VM_IP: true
            LS_DNAT_MOD_DL_DST: true
            LS_CT_SKIP_DST_LPORT_IPS: true
            ENABLE_BIND_LOCAL_IP: true
            U2O_INTERCONNECTION: false
            ENABLE_TPROXY: false
            ENABLE_IC: false
          ipv4:
            POD_CIDR: "10.96.0.0/17"
            POD_GATEWAY: "10.96.0.1"
            SVC_CIDR: "10.96.128.0/17"
            JOIN_CIDR: "100.64.0.0/16"
            PINGER_EXTERNAL_ADDRESS: "192.168.200.1"
            PINGER_EXTERNAL_DOMAIN: "node1.cloud.local."

    CILIUM:
        chart_ref: "cloudstack/cilium"
        release_state: present
        update_repo_cache: true
        release_namespace: kube-system
        create_namespace: yes
        chart_version: 1.15.3

        clusterPoolIPv4PodCIDRList: "10.96.0.0/17"
        clusterPoolIPv4MaskSize: "24"

        cilium_repository: "harbor.iblog.pro/quayio/cilium/cilium"
        certgen_repository: "harbor.iblog.pro/quayio/cilium/certgen"
        hubble_relay_repository: "harbor.iblog.pro/quayio/cilium/hubble-relay"
        hubble_ui_backend_repository: "harbor.iblog.pro/quayio/cilium/hubble-ui-backend"
        hubble_ui_repository: "harbor.iblog.pro/quayio/cilium/hubble-ui"
        cilium_envoy_repository: "harbor.iblog.pro/quayio/cilium/cilium-envoy"
        cilium_etcd_operator_repository: "harbor.iblog.pro/quayio/cilium/cilium-etcd-operator"
        operator_repository: "harbor.iblog.pro/quayio/cilium/operator"
        startup_script_repository: "harbor.iblog.pro/quayio/cilium/startup-script"
        clustermesh_apiserver_repository: "harbor.iblog.pro/quayio/cilium/clustermesh-apiserver"
        busybox_repository: "harbor.iblog.pro/dockerio/library/busybox"
        spire_agent_repository: "harbor.iblog.pro/ghcrio/spiffe/spire-agent"
        spire_server_repository: "harbor.iblog.pro/ghcrio/spiffe/spire-server"

    METALLB:
        chart_version: "0.14.3"
        prometheus_repository: harbor.iblog.pro/gcrio/kubebuilder/kube-rbac-proxy
        prometheus_tag: "v0.12.0"
        controller_repository: harbor.iblog.pro/quayio/metallb/controller
        controller_tag: "v0.14.3"
        speaker_repository: harbor.iblog.pro/quayio/metallb/speaker
        speaker_tag: "v0.14.3"
        frr_repository: harbor.iblog.pro/quayio/frrouting/frr
        frr_tag: "8.5.2"
        ippools:
          default:
          - 11.0.0.0/22
          internet:
          - 11.0.10.1/32
          internet2:
          - 11.0.11.2/32
          coredns-kube:
          - 11.0.11.22/32

ubuntu_mirror: "https://nexus3.iblog.pro/repository/archive.ubuntu.com/"
ubuntu_mirror_security: "https://nexus3.iblog.pro/repository/security.ubuntu.com/"
debian_mirror: "https://nexus3.iblog.pro/repository/deb.debian.org/debian"
debian_mirror_security: "https://nexus3.iblog.pro/repository/deb.debian.org/debian-security"

system_timezone: Etc/UTC
ntp_servers:
- "pool.ntp.org"
- "pool.ntp.org"
ntp_fallback_servers:
- "pool.ntp.org"
- "pool.ntp.org"

KUBERNETES_VERSION: 1.29.3

kube_version: "v{{ KUBERNETES_VERSION }}"
crictl_version: "v1.29.0"
containerd_version: "1.7.14"
image_arch: "amd64"
runc_version: "1.1.12"
cni_version: "1.4.1"
k8s_regestry: "harbor.iblog.pro/registry.k8s.io"
etcd_version: "3.5.12"
LANG: ru_RU.UTF-8
#UBUNTU_VERSION: jammy
#noble
#DEBIAN_VERSION: bookworm
# VERSION: jammy
#NAMESERVER: "192.168.1.10"

#IPREFIX: "192.168.200"
#CLUSTERIP: "186"
#NODE: "180"
clusterName: "cluster.local"
#podSubnet: "10.96.0.0/17"
#serviceSubnet: "10.96.128.0/17"
APITOKEN: "bu5tiw.iq1i8h3t740fgy0l"

#VIPIP_KEEPALIVE: "192.168.200.186"
APISERVER_DEST_PORT: 6443
keepalived_auth_type: AH
keepalived_auth_pass: "e470f1261"
KEEPALIVE_id: 51

kubernetesVersion: "{{ KUBERNETES_VERSION }}"
#CONTROL_PLANE_IP: 192.168.200.186

KUBEADM_CERTSANs: &KUBEADM_CERTSANs
  - "k8s.cloud.local"
  - "192.168.200.190"
  - "k8s.iblog.pro"

KUBEADM_ClusterConfiguration:
    certificatesDir: /etc/kubernetes/pki
    apiServer:
      extraArgs:
        audit-log-format: json
        audit-log-maxage: "7"
        audit-log-maxbackup: "10"
        audit-log-maxsize: "100"
        audit-log-path: /var/log/kube-audit/audit.log
        audit-policy-file: /etc/kubernetes/policies/audit-policy.yaml
      extraVolumes:
      - hostPath: /etc/kubernetes/policies
        mountPath: /etc/kubernetes/policies
        name: policies
        pathType: DirectoryOrCreate
        readOnly: true
      - hostPath: /var/log/kube-audit
        mountPath: /var/log/kube-audit
        name: logs
        pathType: DirectoryOrCreate
      timeoutForControlPlane: 4m0s
      certSANs: *KUBEADM_CERTSANs
    controllerManager:
      extraArgs:
        bind-address: 0.0.0.0
        node-cidr-mask-size-ipv4: "24"
    etcd:
      local:
        extraArgs:
          listen-metrics-urls: http://0.0.0.0:2381
    scheduler:
      extraArgs:
        bind-address: 0.0.0.0
    dns: {}

KubeletConfiguration:
    registerNode: true
    cgroupDriver: "systemd"
    cgroupsPerQOS: true
    clusterDomain: "cluster.local"
    cpuManagerReconcilePeriod: "0s"
    fileCheckFrequency: "0s"
    healthzBindAddress: "127.0.0.1"
    httpCheckFrequency: "0s"
    imageMinimumGCAge: "0s"
    memorySwap: {}
    nodeStatusReportFrequency: "20s"
    nodeStatusUpdateFrequency: "30s"
    resolvConf: "/run/systemd/resolve/resolv.conf"
    runtimeRequestTimeout: "0s"
    evictionPressureTransitionPeriod: "5m"
    evictionMaxPodGracePeriod: 300
    memoryThrottlingFactor: 0.9
    podsPerCore: 5
    maxPods: 20
    containerLogMaxSize: "50Mi"
    containerLogMaxFiles: 5
    maxParallelImagePulls: 5
    podPidsLimit: 4096
    maxOpenFiles: 1000000
    shutdownGracePeriod: "15s"
    shutdownGracePeriodCriticalPods: "5s"
    streamingConnectionIdleTimeout: "0s"
    syncFrequency: "0s"
    volumeStatsAggPeriod: "0s"
    kubeAPIQPS: 50
    kubeAPIBurst: 100
    rotateCertificates: true
    serverTLSBootstrap: false
    serializeImagePulls: false
    tlsMinVersion: "VersionTLS12"
    imageGCHighThresholdPercent: 55
    imageGCLowThresholdPercent: 50
    kubeletCgroups: /kubelet.slice
    authentication:
        anonymous:
            enabled: false
        webhook:
            cacheTTL: "0s"
            enabled: true
    authorization:
        mode: "Webhook"
        webhook:
          cacheAuthorizedTTL:   "0s"
          cacheUnauthorizedTTL: "0s"
    logging:
      flushFrequency: 0
      options:
        json:
            infoBufferSize:  0
      verbosity:  0
    tlsCipherSuites:
      - "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
      - "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
      - "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
      - "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
      - "TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256"
      - "TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256"
    allowedUnsafeSysctls:
      - "net.core.somaxconn"
    systemReserved:
      cpu: 500m
      memory: 1000Mi
      ephemeral-storage: "1Gi"
    kubeReserved:
      cpu: 500m
      memory: 500Mi
      ephemeral-storage: 3Gi
    evictionHard:
      "memory.available":   "500Mi"
      "nodefs.available":   "20%"
      "nodefs.inodesFree":  "10%"
      "imagefs.available":  "25%"
      "imagefs.inodesFree": "15%"
    evictionMinimumReclaim:
      memory.available: "0Mi"
      nodefs.available: "500Mi"
      imagefs.available: "2Gi"
    evictionSoft:
      "memory.available":   "500Mi"
      "nodefs.available":   "25%"
      "nodefs.inodesFree":  "15%"
      "imagefs.available":  "30%"
      "imagefs.inodesFree": "25%"
    evictionSoftGracePeriod:
      "memory.available":   "2m30s"
      "nodefs.available":   "2m30s"
      "nodefs.inodesFree":  "2m30s"
      "imagefs.available":  "2m30s"
      "imagefs.inodesFree": "2m30s"

KubeProxyConfiguration:
    mode: ipvs
    metricsBindAddress: 0.0.0.0:10249

kubernetes_pki:
  - /etc/kubernetes/pki/sa.pub
  - /etc/kubernetes/pki/sa.key
  - /etc/kubernetes/pki/etcd/ca.key
  - /etc/kubernetes/pki/etcd/ca.crt
  - /etc/kubernetes/pki/front-proxy-ca.crt
  - /etc/kubernetes/pki/apiserver-etcd-client.crt
  - /etc/kubernetes/pki/apiserver-etcd-client.key
  - /etc/kubernetes/pki/ca.key
  - /etc/kubernetes/pki/ca.crt
  - /etc/kubernetes/pki/front-proxy-ca.key


