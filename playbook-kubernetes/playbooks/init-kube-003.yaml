
  - block:
    - name: install keepalived
      package:
        name: keepalived
        state: present

    - name: Run mkdir -p /etc/kubernetes/policies/
      ansible.builtin.shell: mkdir -p /etc/kubernetes/policies/
      args:
        executable: /bin/bash
      register: logs
    - debug: var=logs.stdout_lines


    - name: Run mkdir -p /var/log/kube-audit
      ansible.builtin.shell: mkdir -p /var/log/kube-audit
      args:
        executable: /bin/bash
      register: logs
    - debug: var=logs.stdout_lines

    - name: Run copy audit-policy.yaml /etc/kubernetes/policies/
      template:
        src: "audit-policy.yaml.j2"
        dest: /etc/kubernetes/policies/audit-policy.yaml
        mode: '0644'

    - name: Copy kubeadm.yml
      template:
        src: "kubeadm.yml.j2"
        dest: /root/kubeadm.yml
        mode: '0644'

    - name: Run cat  kubeadm.yml
      ansible.builtin.shell: cat /root/kubeadm.yml
      args:
        executable: /bin/bash
      register: logs
    - debug: var=logs.stdout_lines

    - name: Run cat  kubeadm.yml
      ansible.builtin.shell: cat /root/kubeadm.yml
      args:
        executable: /bin/bash
      register: logs
    - debug: var=logs.stdout_lines

    - name: Run cat  mkdir /sys/fs/cgroup/kubepod.cluster.slice/
      ansible.builtin.shell: if [ ! -d "/sys/fs/cgroup/kubepod.cluster.slice/" ]; then     echo "Directory /sys/fs/cgroup/kubepod.cluster.slice/ DOES NOT exists.";     mkdir /sys/fs/cgroup/kubepod.cluster.slice/ || throw 18380; fi
      args:
        executable: /bin/bash
      register: logs
    - debug: var=logs.stdout_lines

    - name: Run kubeadm config migrate --old-config kubeadm.yml  --new-config kubeadm.v3.yml
      ansible.builtin.shell: cd /root; kubeadm config migrate --old-config kubeadm.yml  --new-config kubeadm.v3.yml
      args:
        executable: /bin/bash
      register: logs
    - debug: var=logs.stdout_lines

    - name: Run kubeadm init --config=./kubeadm.yml
      ansible.builtin.shell: cd /root; kubeadm init --config=/root/kubeadm.yml
      args:
        executable: /bin/bash
      register: logs
    - debug: var=logs.stdout_lines
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
