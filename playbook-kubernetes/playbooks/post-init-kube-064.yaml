    - name: Deploy Kyverno
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      community.kubernetes.helm:
        name:  cloudstack-kyverno
        chart_ref: "cloudstack/kyverno"
        release_state: present
        update_repo_cache: true
        release_namespace: "kyverno"
        create_namespace: yes
        chart_version: "3.2.6"
        values:
            # Global settings
            config:
              defaultRegistry: harbor.iblog.pro/dockerio
            test:
              image:
                registry: harbor.iblog.pro/dockerio
                repository: library/busybox
            webhooksCleanup:
              # -- Pod anti affinity constraints.
              podAntiAffinity: {}
            policyReportsCleanup:
              # -- Pod anti affinity constraints.
              podAntiAffinity: {}
            cleanupJobs:
              admissionReports:
                # -- Pod anti affinity constraints.
                podAntiAffinity: {}
              clusterAdmissionReports:
                # -- Pod PriorityClassName
                priorityClassName: ""
                # -- Pod anti affinity constraints.
                podAntiAffinity: {}
              updateRequests:
                # -- Pod anti affinity constraints.
                podAntiAffinity: {}
              ephemeralReports:
                # -- Pod PriorityClassName
                priorityClassName: ""
                # -- Job resources
                resources: {}
                # -- Pod anti affinity constraints.
                podAntiAffinity: {}
              clusterEphemeralReports:
                # -- Pod PriorityClassName
                priorityClassName: ""
                # -- Job resources
                resources: {}
                # -- Pod anti affinity constraints.
                podAntiAffinity: {}
            # Admission controller configuration
            admissionController:
              initContainer:
                image:
                  registry: harbor.iblog.pro/ghcrio
                  repository: kyverno/kyvernopre
              container:
                image:
                  registry: ghcr.io
                  repository: kyverno/kyverno
                resources:
                  # -- Pod resource limits
                  limits:
                    cpu: 300m
                    memory: 384Mi
                  # -- Pod resource requests
                  requests:
                    cpu: 100m
                    memory: 128Mi
              replicas: 3
              priorityClassName: 'system-cluster-critical'
              podDisruptionBudget:
                enabled: true
                minAvailable: 1
            # Background controller configuration
            backgroundController:
              image:
                registry: ghcr.io
                repository: kyverno/background-controller
              replicas: 2
              priorityClassName: 'system-cluster-critical'
              podDisruptionBudget:
                enabled: true
                minAvailable: 1
              resources:
                # -- Pod resource limits
                limits:
                  cpu: 200m
                  memory: 128Mi
                # -- Pod resource requests
                requests:
                  cpu: 100m
                  memory: 64Mi
            # Cleanup controller configuration
            cleanupController:
              image:
                # -- Image registry
                registry: ghcr.io
                # -- Image repository
                repository: kyverno/cleanup-controller
              replicas: 2
              priorityClassName: 'system-cluster-critical'
              podDisruptionBudget:
                enabled: true
                minAvailable: 1
              resources:
                # -- Pod resource limits
                limits:
                  cpu: 200m
                  memory: 128Mi
                # -- Pod resource requests
                requests:
                  cpu: 100m
                  memory: 64Mi
            # Reports controller configuration
            reportsController:
              image:
                # -- Image registry
                registry: ghcr.io
                # -- Image repository
                repository: kyverno/reports-controller
              replicas: 2
              priorityClassName: 'system-cluster-critical'
              podDisruptionBudget:
                enabled: true
                minAvailable: 1
              resources:
                # -- Pod resource limits
                limits:
                  cpu: 200m
                  memory: 128Mi
                # -- Pod resource requests
                requests:
                  cpu: 100m
                  memory: 64Mi

    - name: Sleep 60 second, Deploy Kyverno
      pause:
        seconds: 60


    - name: Deploy Kyverno policies
      environment:
        KUBECONFIG: /etc/kubernetes/admin.conf
      community.kubernetes.helm:
        name: kyverno-policies
        chart_ref: "cloudstack/kyverno-policies"
        release_state: present
        update_repo_cache: true
        release_namespace: "kyverno"
        create_namespace: yes
        chart_version: "3.2.6"
        values:
            # Global settings
            # -- Policy kind (`ClusterPolicy`, `Policy`)
            # Set to `Policy` if you need namespaced policies and not cluster policies
            policyKind: ClusterPolicy
            # -- Pod Security Standard profile (`baseline`, `restricted`, `privileged`, `custom`).
            # For more info https://kyverno.io/policies/pod-security.
            podSecurityStandard: baseline
            # -- Pod Security Standard (`low`, `medium`, `high`).
            podSecuritySeverity: medium
            # -- Policies to include when `podSecurityStandard` is `custom`.
            podSecurityPolicies: []
            # -- Additional policies to include from `other`.
            includeOtherPolicies: []
            # - require-non-root-groups
            # -- Additional policies to include from `restricted`.
            includeRestrictedPolicies: []
            # - require-run-as-non-root-user
            # -- API server behavior if the webhook fails to respond ('Ignore', 'Fail')
            # For more info: https://kyverno.io/docs/writing-policies/policy-settings/
            failurePolicy: Fail
            # -- Validation failure action (`Audit`, `Enforce`).
            # For more info https://kyverno.io/docs/writing-policies/validate.
            validationFailureAction: Audit
            # -- Define validationFailureActionByPolicy for specific policies.
            # Override the defined `validationFailureAction` with a individual validationFailureAction for individual Policies.
            validationFailureActionByPolicy: {}
            #  disallow-capabilities-strict: enforce
            #  disallow-host-path: enforce
            #  disallow-host-ports: enforce
            # -- Policies background mode
            background: true
            # -- (bool) SkipBackgroundRequests bypasses admission requests that are sent by the background controller
            skipBackgroundRequests: ~
            # -- Kyverno version
            # The default of "autodetect" will try to determine the currently installed version from the deployment
            kyvernoVersion: autodetect
