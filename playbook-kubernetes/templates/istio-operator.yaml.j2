apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  namespace: istio-system
  name: istio-ingressgateway
spec:
  hub: harbor.iblog.pro/dockerio/istio
#  tag: latest
  meshConfig:
    accessLogFile: /dev/stdout
    accessLogEncoding: JSON
    tcpKeepalive:
        time: 60s
#    trustDomain:  k8s.iblog.pro.local -> ????
#    enableTracing: true
  values:
    global:
        jwtPolicy: thrid-party-jwt
#        proxy:
#            clusterDomain: k8s.iblog.pro.local
#            excludeIPRanges: "192.168.201.0/24"
    gateways:
#      spec:
#        containers:
#        - name: istio-proxy
#          image: harbor.iblog.pro/dockerio/istio/proxyv2:1.23.3
      istio-egressgateway:
        enabled: false
      istio-ingressgateway:
        enabled: true
#        podAntiAffinityTermLabelSelector:
#          - key: app
#            operator: In
#            values: istio-ingressgateway ERROR! нет поля
#            topologyKey: "failure-domain.beta.kubernetes.io/zone"
  components:
    base:
      enabled: true
    pilot:
      enabled: true
      k8s:
        hpaSpec:
          minReplicas: 2
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: "ingress"
                  operator: In
                  values: ["on"]
        resources:
          requests:
            cpu: 100m
            memory: 150Mi
    ingressGateways:
      - name: istio-ingressgateway-system
        namespace: istio-ingressgateway-system
        enabled: true
        k8s:
          hpaSpec:
            minReplicas: 2 # default 1
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: "ingress"
                    operator: In
                    values: ["on"]
          resources:
            limits:
              cpu: 400m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          service:
            type: ClusterIP
            ports:
              # Whatever is listed as the first port in a Service of
              # type LoadBalancer is picked to be the port used for
              # health checks. 10001 is the port of httpd-healthcheck.
              - name: httpd-healthcheck
                port: 10001
                targetPort: 10001
              - name: http
                port: 80
                targetPort: 8080
              - name: https
                port: 443
                targetPort: 8443
              # Istio readiness port of gateways
              - name: status-port
                port: 15021
                targetPort: 15021
      - name: istio-ingressgateway-private
        namespace: istio-ingressgateway-private
        enabled: true
        k8s:
          hpaSpec:
            minReplicas: 2 # default 1
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: "ingress"
                    operator: In
                    values: ["on"]
          resources:
            limits:
              cpu: 400m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          service:
            # ExternalName, ClusterIP, NodePort, and LoadBalancer.
            type: LoadBalancer
            ports:
              # https://github.com/kubernetes/api/blob/v0.33.2/core/v1/types.go#L5583
              # Whatever is listed as the first port in a Service of
              # type LoadBalancer is picked to be the port used for
              # health checks. 10001 is the port of httpd-healthcheck.
              - name: httpd-healthcheck
                port: 10001
                targetPort: 10001
              - name: http
                port: 80
                targetPort: 8080
              - name: https
                port: 443
                targetPort: 8443
              # Istio readiness port of gateways
              - name: status-port
                port: 15021
                targetPort: 15021
      - name: istio-ingressgateway-public
        enabled: true
        namespace: istio-ingressgateway-public
        k8s:
          hpaSpec:
            minReplicas: 2 # default 1
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: "ingress"
                    operator: In
                    values: ["on"]
          resources:
            limits:
              cpu: 400m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          service:
            type: LoadBalancer
            ports:
              # Whatever is listed as the first port in a Service of
              # type LoadBalancer is picked to be the port used for
              # health checks. 10001 is the port of httpd-healthcheck.
              - name: httpd-healthcheck
                port: 10001
                targetPort: 10001
              - name: http
                port: 80
                targetPort: 8080
              - name: https
                port: 443
                targetPort: 8443
              # Istio readiness port of gateways
              - name: status-port
                port: 15021
                targetPort: 15021
