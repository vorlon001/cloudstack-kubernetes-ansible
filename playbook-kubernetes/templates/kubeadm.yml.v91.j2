apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: {{ APITOKEN }}
  ttl: 120h0m0s
  usages:
  - signing
  - authentication
localAPIEndpoint:
  advertiseAddress: {{IPREFIX}}.{{NODE}}
  bindPort: 6443
nodeRegistration:
#  criSocket: /run/containerd/containerd.sock
  imagePullPolicy: IfNotPresent
  name: node{{NODE}}
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/master
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
certificatesDir: /etc/kubernetes/pki
imageRepository: {{k8s_regestry}}
clusterName: {{clusterName}}
kubernetesVersion: "{{kube_version}}"
controlPlaneEndpoint: {{IPREFIX}}.{{CLUSTERIP}}:6443
apiServer:
  extraArgs:
    audit-log-format: json
    audit-log-maxage: "7"
    audit-log-maxbackup: "10"
    audit-log-maxsize: "100"
    audit-log-path: /var/log/kube-audit/audit.log
    audit-policy-file: /etc/kubernetes/policies/audit-policy.yaml
  extraVolumes:
  - hostPath: /etc/kubernetes/policies
    mountPath: /etc/kubernetes/policies
    name: policies
    pathType: DirectoryOrCreate
    readOnly: true
  - hostPath: /var/log/kube-audit
    mountPath: /var/log/kube-audit
    name: logs
    pathType: DirectoryOrCreate
  timeoutForControlPlane: 4m0s
  certSANs:
{% for item in KUBEADM_CERTSANs %}
  - "{{ item }}"
{% endfor %}
controllerManager:
  extraArgs:
    bind-address: 0.0.0.0
    node-cidr-mask-size-ipv4: "24"
etcd:
  local:
    extraArgs:
      listen-metrics-urls: http://0.0.0.0:2381 
scheduler:
  extraArgs:
    bind-address: 0.0.0.0
dns: {}
networking:
  dnsDomain: {{clusterName}}
  podSubnet: {{podSubnet}}
  serviceSubnet: {{serviceSubnet}}
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
{{ KubeletConfiguration | to_nice_yaml }}
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
{{ KubeProxyConfiguration | to_nice_yaml }}
